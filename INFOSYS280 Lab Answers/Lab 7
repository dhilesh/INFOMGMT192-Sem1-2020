### HTML ###
<div class="wrapper">
<section class="main">
<h1>Items for selection</h1>
<section id="bookList"></section>
</section>
<section class="cart">
<h1>Cart</h1>
<section id="cartList"></section>
</section>
</div>

 
### CSS ###
.hoverBg {
background-color: grey;
}

html,
body {
height: 100%;
margin: 0;
}

.wrapper>section {
border: 2px solid grey;
border-radius: 5px;
padding: 1em;
}

.bookContainer {
float: left;
padding: 1em;
}

img {
height: 10em;
}

.wrapper {
display: grid;
grid-template-columns: 1fr 15em;
grid-gap: 10px;
grid-auto-rows: auto;
height: 100%;
}

.main {
grid-column: 1;
grid-row: 1;
}

.cart {
grid-column: 2;
grid-row: 1;
}

### JAVASCRIPT ###
// Laboratory Engagement #8: Solution

// Perform an AJAX call to retrive the list of books to be displayed
$.get('https://openlibrary.org/api/books?bibkeys=ISBN:0071435042,ISBN:0935739289,ISBN:0596101996,ISBN:1565923928,ISBN:9780470146231,ISBN:0764576593,ISBN:9780470171370&format=json&jscmd=data').done(loadBooks);

function loadBooks(data) {
let bookList = $('#bookList');

$.each(data, function(key, book) {
let bookDiv = $('<div class="bookContainer">');

// Resolve cover image URL
let coverUrl = 'https://upload.wikimedia.org/wikipedia/en/f/f9/No-image-available.jpg';
if (book.cover !== undefined) {
coverUrl = book.cover.medium;
}
let bookImg = $('<img src="' + coverUrl + '">');

// Create book HTML
bookDiv
.append('<h4>' + book.title + '</h4>')
.append(bookImg);

// Append book to books list
bookList.append(bookDiv);
});

// Register event listeners to handle clicking and mouse motion
$('.bookContainer') // matches all bookContainer divs and adds the following events to each one.
.on("click", clickToAdd)
.mouseenter(hoverHighlightOn)
.mouseleave(hoverHighlightOff);
}

// Adds a book to the shopping cart
function clickToAdd() {
let book = $(this); // 'this' is the jQuery element to which clickToAdd will be attached via .click(), i.e. a bookContainer div.
book.removeClass('hoverBg'); // Remove highlighting

// Use the clone method to creating the book HTML in the cart
let cartBook = book.clone(true);

$('#cartList').append(cartBook);

// Register event listeners to handle clicking
cartBook
.off("click") // Since we are cloning the book, we need to unregister the clickToAdd event handler
.on("click", clickToRemove);
}

// Removes a book from the shopping cart
function clickToRemove() {
$(this).remove();
}

// Event handler for highlithing a book when the mouse is moved over the book
function hoverHighlightOn() {
$(this).addClass('hoverBg');
}

// Event handler for removing the highlithing of a book when the mouse is moved out the book
function hoverHighlightOff() {
$(this).removeClass('hoverBg');
}