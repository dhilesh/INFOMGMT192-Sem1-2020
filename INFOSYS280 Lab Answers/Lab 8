### HTML ###
<!DOCTYPE html>
<html>

<head>
<meta charset="utf-8">
<title>Working in JavaScript Events</title>
</head>

<body>

<h1>Directory Search</h1>

<b>Search query:</b> <input id="search-box" type="text" size="30" /><br />
<h2>Results:</h2>
<ul id="results-container"></ul>
</body>

</html>

### JAVASCRIPT ###
// PROBLEM 1: Building the Staff Directory

const people = [{
firstName: "Jose",
lastName: "Ortiz",
address: {
city: "Auckland",
suburb: "New lynn",
street: "10 Road A"
}
},
{
firstName: "Patrick",
lastName: "Myers",
address: {
city: "Auckland",
suburb: "Grafton",
street: "2B Road B"
}
},
{
firstName: "James",
lastName: "Davidson",
address: {
city: "Auckland",
suburb: "Parnell",
street: "33 Road C"
}
},
{
firstName: "Peter",
lastName: "Olsen",
address: {
city: "Wellington",
suburb: "Central",
street: "2 Road D"
}
},
{
firstName: "Josephine",
lastName: "Lin",
address: {
city: "Dunedin",
suburb: "Central",
street: "110 Road E"
}
}
];

// PROBLEM 2: Writing Basic Search Functionality

function searchPerson(person, query) {
let standardQuery = query.toLowerCase();

// startsWith method: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith
if (person.firstName.toLowerCase().startsWith(query) ||
person.lastName.toLowerCase().startsWith(query)) {

return true;
}

return false;
}

function personToString(person) {
return person.firstName + " " + person.lastName +
". Address: " + person.address.street + " " +
person.address.suburb + ", " + person.address.city;
}

// PROBLEM 3: Searching the Directory

function searchPeople(people, query) {
// filter method: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter

/* Note that in this case, the anonymous function accesses the "query"
variable that is defined as a parameter of the searchPeople function.
This is possible because the anonymous function can access variables
in the scope where it has been declared.
*/
let matchedPeople = people.filter( function(el) {
return searchPerson(el, query);
});

// map method: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
let matchedPeopleStr = matchedPeople.map( function(el) {
return personToString(el);
});

return matchedPeopleStr;
}

// PROBLEM 4: Building the Search Box

// Event handler for the search box
function displayMatchedPeople() {
// Clean previous matches
$("#results-container").empty();

// Obtain the search query
let query = $("#search-box").val();

// Obtain the matched names
let matchedNames = query.length > 0 ? searchPeople(people, query) : [];

// Display the results
for(let name of matchedNames) {
let nameItem = $('<li>' + name + '</li>');
$("#results-container").append(nameItem);
}
}

$('#search-box').on("keyup", displayMatchedPeople);